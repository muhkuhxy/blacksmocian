---
import NavLinks from '../components/navLinks.astro';
import BaseLayout from '../layouts/BaseLayout.astro';
import Hero from '../sections/hero.astro';
import ProduktFeatures from '../sections/produkt-features.astro';
import TechnischeDaten from '../sections/technische-daten.astro';
import FlameLogo from '../components/BlacksmocianLogo.astro';
---
<BaseLayout>
  <div class={`[--sections:6] relative grid grid-cols-[150px,175px,auto,175px] grid-rows-[minmax(max-content,10vh),repeat(var(--sections),auto)] gap-y-16`}>

    <nav class="row-start-1 col-start-3 flex self-start items-center bg-coal bg-opacity-[.60] px-12 py-16 sticky top-0 z-50">
      <ul class="flex justify-between w-full uppercase">
        <NavLinks></NavLinks>
      </ul>
      <div class="absolute left-0 top-0 w-32 ml-[-5rem] mt-[2rem]">
        <FlameLogo></FlameLogo>
      </div>
    </nav>

    <a href="#contact" class="row-span-full col-start-1 mt-[50vh] translate-y-[-50%] [writing-mode:vertical-lr] self-start justify-self-center pr-4 rotate-180 pin uppercase">
      Hol dir hier deinen Smoker!
    </a>
    <svg id="cta-arrow"
      class="[grid-row:1/-2] col-start-2 w-1 h-full justify-self-start stroke-white"
      xmlns="http://www.w3.org/2000/svg"
      preserveAspectRatio="none"
      viewBox="0 0 100 100">
      <g stroke-width="4" stroke-dasharray="6,12" stroke-dashoffset="0" stroke-linecap="square">
        <polyline points="0,0 0,100" vector-effect="non-scaling-stroke"/>
        <path d="M0,100 L,0 0,100" vector-effect="non-scaling-stroke"/>
      </g>
    </svg>

    <section id="hero" class="hero row-start-1 row-span-2 col-start-3">
      <Hero></Hero>
    </section>

    <section id="data" class="row-start-3 col-start-3">
      <TechnischeDaten></TechnischeDaten>
      <ProduktFeatures></ProduktFeatures>
    </section>

    <section id="production" class="row-start-4 col-start-3 pt-40">
      <h2>Herstellung</h2>
    </section>

    <section id="addons" class="row-start-5 col-start-3 pt-40">
      <h2>Optionales Zubehör</h2>
    </section>

    <section id="about" class="row-start-6 col-start-3 pt-40">
      <h2>Die Köpfe dahinter</h2>
    </section>

    <section id="contact" class="row-start-7 col-start-3 pt-40">
      <h2>Schreib uns</h2>
    </section>

    <a href="#" class="row-start-[-1] [grid-col:1/2] justify-self-center self-end mb-8 border border-white py-1 px-2">
      Top
    </a>
</div>
</BaseLayout>

<script>
import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger'

gsap.registerPlugin(ScrollTrigger)

ScrollTrigger.create({
  trigger: '#cta-arrow',
  pin: '.pin',
  start: 'top top',
  end: 'bottom bottom',
  // markers: true
})

// const svg = document.querySelector('#cta-arrow')
// const line = document.querySelector('#aside-line')
// const headline = document.querySelector('#contact h2')
// console.log({svg, line, headline})
// if (svg && line && headline) {
//   const { top, height } = headline.getBoundingClientRect()
//   const { height: fullHeight } = svg.getBoundingClientRect()
//   const y = (window.scrollY + top + height/2) / fullHeight * 100
//   line.setAttribute('d', line.getAttribute('d').replace(/v \d+.*/, `v ${y} h 100`))
// }

const sections = Array.from(document.querySelectorAll('section[id]')).reduce((result, element) => {
  result[element.id] = 0
  return result
}, {})
let highlightedSection = 'hero'
const intersectionObserver = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    const id = (entry.target as HTMLElement).id
    sections[id] = entry.intersectionRatio
  })
  highlightedSection = Object.entries(sections).reduce(([oldId, oldMax], [id, ratio]) => {
    return ratio > oldMax ?
      [id, ratio] :
      [oldId, oldMax];
  }, [null, 0])[0]
  console.log(highlightedSection)
}, {
  threshold: Array(10).fill(undefined).map((_, index) => (index+1)/10)
})
document.querySelectorAll('section[id]').forEach(section => intersectionObserver.observe(section))

</script>